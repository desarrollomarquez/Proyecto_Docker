
#############################################################################################
DOCKERIZAR APPS
#############################################################################################
IMAGE NGINX

Ejecute el siguiente comando para obtener la imagenes de Postgres9.5, Odoo y Nginx:


$ docker pull postgres:9.5
$ docker pull odoo:11
$ docker pull nginx

Muestra informaciones de bajo nivel del contenedor o la imagen:


$ docker inspect naughty_morse

$ docker inspect naughty_morse | grep IPAddress

Exporta el contenido del sistema de archivo de un contenedor a un archivo tar

$ docker export naughty_morse > kalicont.tar

$ docker export -o kalicont.tar naughty_morse

Detiene un contenedor enviando un SIGKILL.

$ docker kill naughty_morse

Ejecuta los siguientes comandos para crear los contenedores:

docker run -d -e POSTGRES_USER=odoo -e POSTGRES_PASSWORD=odoo --name db postgres:9.5
docker run -p 8069:8069 --name odoo --link db:db -t odoo
docker run --name docker-nginx -d  -p 80:80 -i -t nginx

docker run -v /home/diego/Documentos/Repositorios/dataentropia/etc/:/etc/ -p 8069:8069 --name odoo --link db:db -t odoo

#############################################################################################
VPS
#############################################################################################


ssh -p  root@167.114.131.127


[Service]
Environment="HTTP_PROXY=http://icaro.dataentropia.com:80" HTTPS_PROXY=http://icaro.dataentropia.com:80"

[Service]
Environment="HTTPS_PROXY=http://icaro.dataentropia.com:80"

icaro.dataentropia.com

docker run hello-world --build-arg HTTP_PROXY="http://icaro.dataentropia.com:80"

[Service]
Environment="HTTP_PROXY=https://icaro.dataentropia.com:8080/"
Environment="HTTPS_PROXY=https://icaro.dataentropia.com:8080/"
Environment="NO_PROXY=localhost,127.0.0.1,localaddress,.localdomain.com"

[Service]
Environment="HTTP_PROXY=https://167.114.131.127:8080/"
Environment="HTTPS_PROXY=https://167.114.131.127:8080/"
Environment="NO_PROXY=localhost,127.0.0.1,localaddress,.localdomain.com"


export http_proxy="http://icaro.dataentropia.com:8080/"

dockerd --debug \
  --tls=true \
  --tlscert=/var/docker/server.pem \
  --tlskey=/var/docker/serverkey.pem \
  --host tcp://167.114.131.127:2376

- versiones de docker en centos: 

rpm -qa |grep docker

- remover docker de centos:

sudo yum remove docker docker-common docker-selinux docker-engine

- Listamos los paquetes:

yum list installed | grep docker

- Borramos los paquetes:

sudo yum -y remove docker-engine.x86_64

- Borrar las im√°genes y los contenedores:

rm -rf /var/lib/docker


# Generated by NetworkManager
search dataentropia.com

#Google Public DNS
nameserver 8.8.8.8
nameserver 8.8.4.4
nameserver 1.1.1.1
nameserver 1.0.0.1

#OpenDNS
nameserver 87.98.146.77
nameserver 178.33.114.106
nameserver 192.232.213.125




cambiar firewall centos:

firewall-cmd --zone=public --add-port=8080/tcp --permanent

reload cambios:

firewall-cmd --reload

docker run --name docker-nginx -d  -p http://167.114.131.127:8080 -p https://167.114.131.127:8080 -i -t nginx

docker run --name nginx --env http_proxy=http://icaro.dataentropia.com:8080/ --env https_proxy=https://icaro.dataentropia.com:8080/







###############################################################################################################################

#############################################################################################

docker network create saas-demo-network

docker run --name odoo-nginx -d  -p 8080:80 --network saas-demo-network -i -t nginx


